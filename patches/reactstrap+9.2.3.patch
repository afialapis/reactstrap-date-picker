diff --git a/node_modules/reactstrap/esm/Popover.js b/node_modules/reactstrap/esm/Popover.js
index 18f0fc4..5b38720 100644
--- a/node_modules/reactstrap/esm/Popover.js
+++ b/node_modules/reactstrap/esm/Popover.js
@@ -2,22 +2,28 @@ function _extends() { _extends = Object.assign ? Object.assign.bind() : function
 import React from 'react';
 import classNames from 'classnames';
 import TooltipPopoverWrapper, { propTypes } from './TooltipPopoverWrapper';
+
+// reactstrap-date-picker patch
+//    for removing warnings about defaultProps
+const _DEFAULT_OFFSET = [0, 8];
+
 var defaultProps = {
   placement: 'right',
   placementPrefix: 'bs-popover',
   trigger: 'click',
-  offset: [0, 8]
+  offset: _DEFAULT_OFFSET
 };
 function Popover(props) {
   var arrowClasses = classNames('popover-arrow', props.arrowClassName);
   var popperClasses = classNames('popover', 'show', props.popperClassName);
   var classes = classNames('popover-inner', props.innerClassName);
-  return /*#__PURE__*/React.createElement(TooltipPopoverWrapper, _extends({}, props, {
+  return /*#__PURE__*/React.createElement(TooltipPopoverWrapper, _extends({}, defaultProps, props, {
     arrowClassName: arrowClasses,
     popperClassName: popperClasses,
     innerClassName: classes
   }));
 }
 Popover.propTypes = propTypes;
-Popover.defaultProps = defaultProps;
+//Popover.defaultProps = defaultProps;
+
 export default Popover;
\ No newline at end of file
diff --git a/node_modules/reactstrap/lib/Popover.js b/node_modules/reactstrap/lib/Popover.js
index 318f966..20265e7 100644
--- a/node_modules/reactstrap/lib/Popover.js
+++ b/node_modules/reactstrap/lib/Popover.js
@@ -11,23 +11,28 @@ function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "functio
 function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
+
+// reactstrap-date-picker patch
+//    for removing warnings about defaultProps
+const _DEFAULT_OFFSET = [0, 8];
+
 const defaultProps = {
   placement: 'right',
   placementPrefix: 'bs-popover',
   trigger: 'click',
-  offset: [0, 8]
+  offset: _DEFAULT_OFFSET
 };
 function Popover(props) {
   const arrowClasses = (0, _classnames.default)('popover-arrow', props.arrowClassName);
   const popperClasses = (0, _classnames.default)('popover', 'show', props.popperClassName);
   const classes = (0, _classnames.default)('popover-inner', props.innerClassName);
-  return /*#__PURE__*/_react.default.createElement(_TooltipPopoverWrapper.default, _extends({}, props, {
+  return /*#__PURE__*/_react.default.createElement(_TooltipPopoverWrapper.default, _extends({}, defaultProps, props, {
     arrowClassName: arrowClasses,
     popperClassName: popperClasses,
     innerClassName: classes
   }));
 }
 Popover.propTypes = _TooltipPopoverWrapper.propTypes;
-Popover.defaultProps = defaultProps;
+//Popover.defaultProps = defaultProps;
 var _default = Popover;
 exports.default = _default;
\ No newline at end of file
